@model IEnumerable<TeachingTask>
@{
    ViewData["Title"] = "教学任务";
    Layout = "_Layout";
}

 <!--导入Start-->
<div id="importDiv" style="display:none">
    <form id="AjaxForm1" name="AjaxForm1" action="~/TeachingTask/ImportTeachingTask" enctype="multipart/form-data" method="post">
        <table class="table table-striped">
            <tr>
                <td>
                    <input type="file" name="files" />
                </td>
            </tr>
            <tr>
                <td style="text-align: center">
                    <input type="button" onclick="AjaxForm1Submit()" value="提交" class="btn btn-danger btn-sm" style="width:150px" />
                </td>
            </tr>
            <tr>
                <td>
                    <b>约束：</b><br />
                    1，第一行表头必须固定，不支持随意调换列。<br />
                    2，工作簿选取顺序，第一顺序是工作簿名字叫学生，第二顺序是第一工作簿<br />
                    2，<a href="~/template/teachingtask.xlsx">下载模板</a>
                </td>
            </tr>
        </table>
        <ol id="msgul"></ol>
    </form>
</div><!--导入End-->

<div class="container-fluid">
    <form id="mainForm" class="form-inline" method="post">
        <div class="row" style="padding:10px 0;">
            <div class="col-xs-6">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">搜索条件</div>
                        <input type="text" class="form-control" name="IndexsearchKey" value="@ViewData["IndexsearchKey"]" id="IndexsearchKey" placeholder="学期">
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-info">检索</button>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-xs-6 text-right">
                <button type="button" class="btn btn-danger" onclick="DivLayer(1,'导入教学任务',$('#importDiv'))">导入</button>
                <a class="btn btn-danger" asp-action="Create">添加信息</a>
            </div> 
        </div>

        <div class="row">
            <div class="col-lg-12">
                <table class="table-striped table">
                    <thead>
                        <tr>
                            <th>学期</th>
                            <th>课程</th>
                            <th>周次</th>
                            <th class="text-right">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td title="@item.Memo">@item.Term</td>
                                <td>@item.Course.Name</td> 
                                <td>@($@"{item.BegWeek}/{item.EndWeek}")</td>
                                <td class="text-right"> 
                                    <a data-content-id="@item.TeachingTaskId" class="btn btn-info btn-xs btnPush">下发</a>
                                    <a asp-action="Detail2" asp-route-id="@item.TeachingTaskId" class="btn btn-primary btn-xs">排程</a> 
                                    <a asp-action="Edit" asp-route-id="@item.TeachingTaskId" class="btn btn-primary btn-xs">修改</a> 
                                    <a data-content-id="@item.TeachingTaskId" class="btn btn-danger btn-xs btnDel">删除</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div> 

    </form>
</div>

@section scripts{
    <script type="text/javascript">

        $(function () {
            var options = {
                //target: '#output',          //把服务器返回的内容放入id为output的元素中
                //beforeSubmit: showRequest,  //提交前的回调函数
                success: showResponse,      //提交后的回调函数
                //url: url,                 //默认是form的action， 如果申明，则会覆盖
                type: 'post',               //默认是form的method（get or post），如果申明，则会覆盖
                dataType: 'json',           //html(默认), xml, script, json...接受服务端返回的类型
                //clearForm: true,          //成功提交后，清除所有表单元素的值
                //resetForm: true,          //成功提交后，重置所有表单元素的值
                timeout: 3000               //限制请求的时间，当请求大于3秒后，跳出请求
            }
            function showResponse(responseText, statusText) {
                console.log("responseText", responseText);
                console.log("statusText", statusText);
                var data = responseText;
                if (data.result == 1) {
                    layer.closeAll();

                    layer.msg(data.msg, {
                        time: 2000, end: function () {
                            location.href = location.href;
                        }
                    }
                    )
                } else {
                    layer.msg(data.msg);
                }
            };

            //下发
            $('.btnPush').on('click', function () {
                console.log('btnPush')
                var id = $(this).attr('data-content-id');

                layer.confirm('确认要下发吗？', {
                    btn: ['确定', '取消']
                }, function () {
                    $.ajax({
                        url: '/TeachingTask/Push',
                        type: 'POST',
                        async: true,
                        data: {
                            id: id
                        },
                        timeout: 5000,
                        dataType: 'json',
                        beforeSend: function (xhr) {
                            console.log(xhr)
                            console.log('发送前')
                        },
                        success: function (data, textStatus, jqXHR) {
                            console.log(data)
                            console.log(textStatus)
                            console.log(jqXHR)
                            if (data.result == 1) {
                                layer.closeAll();
                                layer.msg(data.msg, {
                                    time: 2000, end: function () {
                                        location.href = location.href;
                                    }
                                }
                                )
                            } else {
                                layer.msg(data.msg);
                            }
                        },
                        error: function (xhr, textStatus) {
                            console.log('错误')
                            console.log(xhr)
                            console.log(textStatus)
                        },
                        complete: function () {
                            console.log('结束')
                        }
                    })
                }, function () {
                    return
                });
            })
             
            $('.btnDel').on('click', function () {
                console.log('btnDel')
                var id = $(this).attr('data-content-id');

                layer.confirm('数据不可恢复，确认要删除吗？', {
                    btn: ['确定', '取消']
                }, function () {
                    $.ajax({
                        url: '/TeachingTask/Delete',
                        type: 'POST',
                        async: true,
                        data: {
                            id: id
                        },
                        timeout: 5000,
                        dataType: 'json',
                        beforeSend: function (xhr) {
                            console.log(xhr)
                            console.log('发送前')
                        },
                        success: function (data, textStatus, jqXHR) {
                            console.log(data)
                            console.log(textStatus)
                            console.log(jqXHR)
                            if (data.result == 1) {
                                layer.closeAll();
                                layer.msg(data.msg, {
                                    time: 2000, end: function () {
                                        location.href = location.href;
                                    }
                                }
                                )
                            } else {
                                layer.msg(data.msg);
                            }
                        },
                        error: function (xhr, textStatus) {
                            console.log('错误')
                            console.log(xhr)
                            console.log(textStatus)
                        },
                        complete: function () {
                            console.log('结束')
                        }
                    })
                }, function () {
                    return
                });
            })
           
        })


        var options = {
            beforeSend: function () {
                $('#msgul').html('')
                layer.load(3, { shade: 0.8 });
            },
            uploadProgress: function (event, position, total, percentComplete) {
            },
            dataType: 'json',
            success: function (r) { 
                if (r.result == 1) {
                    console.log(1)
                    //jQuery("#grid-table").trigger("reloadGrid");
                    if (r.data != null) { 
                        console.log(2)
                        layer.msg(r.message + ",但是有重复数据");
                        for (var i = 0; i < r.data.length; i++)
                            $('#msgul').append(r.data[i])
                    }
                    else { 
                        console.log(3)
                        layer.msg(r.msg, {
                            time: 2000, end: function () {
                                layer.closeAll();
                                location.href = location.href;
                            }
                        })
                    }
                }
                else {
                    console.log(4)
                    var msg = r.msg;
                    layer.msg(msg);
                }
            },
            complete: function (r) { 
               
            }
        }

        function AjaxForm1Submit() {
            $("#AjaxForm1").ajaxSubmit(options);
        }
    </script>
}




