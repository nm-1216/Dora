@model Syllabus
@{
    ViewData["Title"] = "课程教学大纲维护";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section styles{
<link href="~/lib/bootstrap-select/dist/css/bootstrap-select.css" rel="stylesheet" />
    <style>
        .ck-editor__editable {
            min-height: 400px;
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="SyllabusId" />
                <div class="page-header">
                    <h1>@Model.Course.Name<small>@Model.Teacher.Name</small></h1>
                </div>

                <table class="table table-striped" style="margin-bottom:0">
                    <thead>
                        <tr>
                            <th>版本</th>
                            <th>学时</th>
                            <th>学分</th>
                            <th>新附件</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><input class="form-control" asp-for="Version" /></td>
                            <td><input class="form-control" asp-for="Course.Period" disabled /></td>
                            <td><input class="form-control" asp-for="Course.Credit" disabled /></td>
                            <td><input type="file" name="files" /></td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                附件： <a href="@Model.TeaProPath">@Model.TeaProPath</a>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <div style="padding-bottom:15px;text-align:right"> 
                        <input type="button" class="btn btn-info btn-sm" style="width:100px" value="建议选用教材" id="btnSyllabusBook" data-content-id="@Model.SyllabusId" />
                        <input type="button" class="btn btn-info btn-sm" style="width:100px" value="教学时数分配" id="btnSyllabusPeriod" data-content-id="@Model.SyllabusId" />
                        <input type="button" class="btn btn-info btn-sm" style="width:100px" value="设置对应专业" id="btnSyllabusProfessional" data-content-id="@Model.SyllabusId" />
                        <input type="button" class="btn btn-info btn-sm" style="width:100px" value="设置先修课程" id="btnSyllabusFirstCourse" data-content-id="@Model.SyllabusId" />
                        <input type="button" class="btn btn-info btn-sm" style="width:100px" value="设置任课老师" id="btnSyllabusTeacher" data-content-id="@Model.SyllabusId" />
                        <input type="submit" class="btn btn-danger btn-sm" style="width:100px" value="保存" />
                        <input type="submit" class="btn btn-danger btn-sm" style="width:100px" value="送审" />
                    <a asp-action="Details" asp-route-id="@Model.SyllabusId" class="btn btn-success btn-sm" style="width:100px">预览</a>
                    <a asp-action="Index" class="btn btn-success btn-sm">返回</a>
                    </div>

                <ul id="myTab" class="nav nav-tabs">
                    <li class="active"><a href="#tab1" data-toggle="tab">教学目标</a></li>
                    <li><a href="#tab2" data-toggle="tab">教学内容及要求</a></li>
                    <li><a href="#tab4" data-toggle="tab">课程实践教学内容</a></li>
                    <li><a href="#tab5" data-toggle="tab">课程评价方法</a></li>
                    <li><a href="#tab7" data-toggle="tab">教学方法建议</a></li>
                </ul>
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade in active" id="tab1"><textarea id="tab1-editor" asp-for="Tar"></textarea></div>
                    <div class="tab-pane fade" id="tab2"><textarea id="tab2-editor" asp-for="ConReq"></textarea></div>
                    <div class="tab-pane fade" id="tab4"><textarea id="tab4-editor" asp-for="PraCon"></textarea></div>
                    <div class="tab-pane fade" id="tab5"><textarea id="tab5-editor" asp-for="EvaWay"></textarea></div>
                    <div class="tab-pane fade" id="tab6"><textarea id="tab6-editor"></textarea></div>
                    <div class="tab-pane fade" id="tab7"><textarea id="tab7-editor" asp-for="Pro"></textarea></div>
                </div>

                <div class="text-right" style="height:100px;">

                </div>

            </form>
        </div>
    </div>
</div>

<!--建议选用教材Start-->
<div class="DivSyllabusBook" style="display:none">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tabsb1" data-toggle="tab">添加</a></li>
        <li><a href="#tabsb2" data-toggle="tab" id="ViewSyllabusBookList" data-content-id="@Model.SyllabusId">列表</a></li>
    </ul>

    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="tabsb1">
            <form id="CreateSyllabusBook" asp-action="Create" method="post">
                <input type="hidden" name="SyllabusId" value="@Model.SyllabusId" />
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>教材名称：</th>
                            <th>编著者：</th>
                            <th>版次：</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><input id="Name" name="Name" class="form-control" /></td>
                            <td><input id="Compiler" name="Compiler" class="form-control" /></td>
                            <td><input id="Edition" name="Edition" class="form-control" /></td>
                        </tr>
                        <tr>
                            <th>出版社：</th>
                            <th>出版时间：</th>
                            <th></th>
                        </tr>
                        <tr>
                            <td><input name="Press" class="form-control" /></td>
                            <td><input name="PreTime" type="date" class="form-control" /></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td colspan="3" class="text-center">
                                <button class="btn btn-danger" style="width:160px" type="submit">提交</button>
                            </td>
                        </tr>
                    </tbody>

                </table>
            </form>
        </div>
        <div class="tab-pane fade" id="tabsb2">

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>教材名称</th>
                        <th>编著者</th>
                        <th>版次</th>
                        <th>出版社</th>
                        <th>出版时间</th>
                        <th class="text-right">操作</th>
                    </tr>
                </thead>
                <tbody> 
                </tbody>
            </table>

        </div>
    </div>
</div>
<!--建议选用教材End-->

<!--课程学时分配Start-->
<div class="DivSyllabusPeriod" style="display:none">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tabkc1" data-toggle="tab">添加</a></li>
        <li><a href="#tabkc2" data-toggle="tab" id="ViewSyllabusPeriodList" data-content-id="@Model.SyllabusId">列表</a></li>
    </ul>

    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="tabkc1">
            <form id="CreateSyllabusPeriod" asp-action="CreateSyllabusPeriod" method="post">
                <input type="hidden" name="SyllabusId" value="@Model.SyllabusId" />
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>单元序号：</th>
                        <th>讲授课时：</th>
                        <th>实验课时：</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>
                            <input name="UnitOrdNum" class="form-control"/>
                        </td>
                        <td>
                            <input name="TeaPer" class="form-control"/>
                        </td>
                        <td>
                            <input name="ExpPer" class="form-control"/>
                        </td>
                    </tr>
                    <tr>
                        <th colspan="3">课程内容：</th>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <textarea  name="CouCon" class="form-control" style="height: 150px"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="text-center">
                            <button class="btn btn-danger" style="width: 160px" type="submit">提交</button>
                        </td>
                    </tr>
                    </tbody>

                </table>
            </form>
        </div>
        <div class="tab-pane fade" id="tabkc2"> 
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>单元序号</th> 
                        <th>讲授课时</th>
                        <th>实验课时</th> 
                        <th class="text-right">操作</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>

        </div>
    </div>
</div>
<!--课程学时分配End-->

<!--设置先修课程Start-->
<div class="DivSyllabusFirstCourse" style="display: none">
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#tabxx1" data-toggle="tab">添加</a>
        </li>
        <li>
            <a href="#tabxx2" data-toggle="tab" id="ViewSyllabusFirstCourseList" data-content-id="@Model.SyllabusId">列表</a>
        </li>
    </ul>

    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="tabxx1">
            <input type="hidden" name="SyllabusId" value="@Model.SyllabusId" id="DivSyllabusFirstCourse_SyllabusId"/>
            <table class="table table-striped">
                <tbody>
                <tr>
                    <th>
                        <input type="text" class="form-control" name="searchKey" id="searchKey" placeholder="请输入关键字">
                    </th>
                    <th>
                        <button class="btn btn-info btn-block" id="btnSearchCourses">搜索</button>
                    </th>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th>课程内容</th>
                                <th class="text-right">操作</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                            </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
        <div class="tab-pane fade" id="tabxx2">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>课程内容</th>
                    <th class="text-right">操作</th>
                </tr>
                </thead>
                <tbody></tbody>
            </table>

        </div>
    </div>
</div>
<!--设置先修课程End-->

<!--设置对应专业Start-->
<div class="DivSyllabusProfessional" style="display: none">
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#tabzy1" data-toggle="tab">添加</a>
        </li>
        <li>
            <a href="#tabzy2" data-toggle="tab" id="ViewSyllabusProfessionalList" data-content-id="@Model.SyllabusId">列表</a>
        </li>
    </ul>

    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="tabzy1">
            <input type="hidden" name="SyllabusId" value="@Model.SyllabusId" id="DivSyllabusProfessional_SyllabusId"/>
            <table class="table table-striped">
                <tbody>
                <tr>
                    <th>
                        <input type="text" class="form-control" name="searchKey" id="ProfessionalsearchKey" placeholder="请输入关键字">
                    </th>
                    <th>
                        <button class="btn btn-info btn-block" id="btnSearchProfessionals">搜索</button>
                    </th>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th>专业</th>
                                <th class="text-right">操作</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr></tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                </tbody>

            </table>
        </div>
        <div class="tab-pane fade" id="tabzy2">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>专业</th>
                    <th class="text-right">操作</th>
                </tr>
                </thead>
                <tbody></tbody>
            </table>

        </div>
    </div>
</div>
<!--设置对应专业End-->

<!--设置任课老师Start-->
<div class="DivSyllabusTeacher" style="display: none">
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#tabls1" data-toggle="tab">添加</a>
        </li>
        <li>
            <a href="#tabls2" data-toggle="tab" id="ViewSyllabusTeacherList" data-content-id="@Model.SyllabusId">列表</a>
        </li>
    </ul>
    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="tabls1">
            <input type="hidden" name="SyllabusId" value="@Model.SyllabusId" id="DivSyllabusTeacher_SyllabusId"/>
            <table class="table table-striped">
                <tbody>
                <tr>
                    <td>
                        <input type="text" class="form-control" name="searchKey" id="TeachersearchKey" placeholder="请输入关键字">
                    </td>
                    <td>
                        <button class="btn btn-info btn-block" id="btnSearchTeachers">搜索</button>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th>老师</th>
                                <th class="text-right">操作</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr></tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                </tbody>

            </table>
        </div>
        <div class="tab-pane fade" id="tabls2">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>老师</th>
                    <th class="text-right">操作</th>
                </tr>
                </thead>
                <tbody></tbody>
            </table>

        </div>
    </div>
</div>
<!--设置对应老师End-->
@section scripts{
<script src="~/lib/bootstrap-select/js/bootstrap-select.js"></script>
    <script type="text/javascript">
        //导入数据
        var import_options = {
            beforeSend: function () {
                $('#msgul').html('')
                layer.load(3, { shade: 0.8 });
            },
            uploadProgress: function (event, position, total, percentComplete) {
            },
            dataType: 'json',
            success: function (r) {
                layer.closeAll('loading');
                console.log(r)
                if (r.result == 1) {
                    console.log(1)
                    jQuery("#grid-table").trigger("reloadGrid");
                    if (r.data != null) {
                        console.log(2)
                        layer.msg(r.message + ",但是有重复数据");
                        for (var i = 0; i < r.data.length; i++)
                            $('#msgul').append(r.data[i])
                    }
                    else {
                        console.log(3)
                        layer.msg(r.msg, {
                            time: 2000, end: function () {
                                layer.closeAll();
                                location.href = location.href;
                            }
                        })
                    }
                }
                else {
                    console.log(4)
                    var msg = r.msg;
                    layer.msg(msg);
                }
            },
            complete: function (xhr) {
            }
        }

        function AjaxForm1Submit() {
            $("#AjaxForm1").ajaxSubmit(import_options);
        }





        //删除一条建议选用教材
        function delSyllabusBook(id,sid) {
            console.log('btnDel') 
            $.ajax({
                url: '/Syllabus/DeleteSyllabusBook',
                type: 'POST',
                async: true,
                data: {
                    id: id,
                    sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //layer.closeAll();
                        $('#ViewSyllabusBookList').click();
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }

        //删除一条课程学时分配
        function delSyllabusPeriod(id, sid) {
            console.log('btnDel') 
            $.ajax({
                url: '/Syllabus/DeleteSyllabusPeriod',
                type: 'POST',
                async: true,
                data: {
                    id: id,
                    sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //layer.closeAll();
                        $('#ViewSyllabusPeriodList').click();
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }
        
        //添加一条先修课程
        function addSyllabusFirstCourse(id, sid) {
            console.log('btnAdd') 
            $.ajax({
                url: '/Syllabus/AddSyllabusFirstCourse',
                type: 'POST',
                async: true,
                data: {
                    id: id,
                    sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //$('#ViewSyllabusPeriodList').click(); 
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }

        //删除一条先修课程
        function delSyllabusFirstCourse(id, sid) {
            console.log('btnDel')
            $.ajax({
                url: '/Syllabus/DeleteSyllabusFirstCourse',
                type: 'POST',
                async: true,
                data: {
                    id: id
                    ,sid :sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //layer.closeAll();
                        $('#ViewSyllabusFirstCourseList').click();
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }

        //添加一条对应专业
        function addSyllabusProfessional(id, sid) {
            console.log('btnAdd')
            $.ajax({
                url: '/Syllabus/AddSyllabusProfessional',
                type: 'POST',
                async: true,
                data: {
                    id: id,
                    sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //$('#ViewSyllabusPeriodList').click(); 
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }

        //删除一条对应专业
        function delSyllabusProfessional(id, sid) {
            console.log('btnDel')
            $.ajax({
                url: '/Syllabus/DeleteSyllabusProfessional',
                type: 'POST',
                async: true,
                data: {
                    id: id
                    , sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //layer.closeAll();
                        $('#ViewSyllabusProfessionalList').click();
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }

        //添加一条老师
        function addSyllabusTeacher(id, sid) {
            console.log('btnAdd')
            $.ajax({
                url: '/Syllabus/AddSyllabusTeacher',
                type: 'POST',
                async: true,
                data: {
                    id: id,
                    sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //$('#ViewSyllabusPeriodList').click(); 
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }

        //删除一条老师
        function delSyllabusTeacher(id, sid) {
            console.log('btnDel')
            $.ajax({
                url: '/Syllabus/DeleteSyllabusTeacher',
                type: 'POST',
                async: true,
                data: {
                    id: id
                    , sid: sid
                },
                timeout: 5000,
                dataType: 'json',
                beforeSend: function (xhr) {
                    console.log(xhr)
                    console.log('发送前')
                },
                success: function (data, textStatus, jqXHR) {
                    console.log(data)
                    console.log(textStatus)
                    console.log(jqXHR)
                    if (data.result == 1) {
                        //layer.closeAll();
                        $('#ViewSyllabusTeacherList').click();
                        layer.msg(data.msg);
                    } else {
                        layer.msg(data.msg);
                    }
                },
                error: function (xhr, textStatus) {
                    console.log('错误')
                    console.log(xhr)
                    console.log(textStatus)
                },
                complete: function () {
                    console.log('结束')
                }
            })

        }


        $(function () {
            var options = {
                //target: '#output',          //把服务器返回的内容放入id为output的元素中
                //beforeSubmit: showRequest,  //提交前的回调函数
                success: showResponse,      //提交后的回调函数
                //url: url,                 //默认是form的action， 如果申明，则会覆盖
                type: 'post',               //默认是form的method（get or post），如果申明，则会覆盖
                dataType: 'json',           //html(默认), xml, script, json...接受服务端返回的类型
                //clearForm: true,          //成功提交后，清除所有表单元素的值
                //resetForm: true,          //成功提交后，重置所有表单元素的值
                timeout: 3000               //限制请求的时间，当请求大于3秒后，跳出请求
            }
            function showResponse(responseText, statusText) {
                console.log("responseText", responseText);
                console.log("statusText", statusText);
                var data = responseText;
                //if (data.result == 1) {
                //    layer.closeAll();
                //    layer.msg(data.msg, {
                //        time: 2000, end: function () {
                //            location.href = location.href;
                //        }
                //    }
                //    )
                //} else {
                    layer.msg(data.msg);
                //}
            };
            //建议选用教材Start
            $("#CreateSyllabusBook").submit(function () { $(this).ajaxSubmit(options); return false; });
            
            $('#btnSyllabusBook').click(function () {
                var id = $(this).attr('data-content-id');
                DivLayer(1, '建议选用教材', $('.DivSyllabusBook'), '800px', '450px')
                // IFreamLayer(1, '建议选用教材', "/Syllabus/SyllabusBook?id="+id, '580px', '460px')
            })

            //设置“建议选用教材”中，每次点击tab中的“列表”，查询数据
            $('#ViewSyllabusBookList').click(function () {
                var id = $(this).attr('data-content-id');
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetSyllabusBooks",
                    data: {
                        id:id
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) {

                                html += "<tr>";
                                html += "<td>" + item.name + "</td>";
                                html += "<td>" + item.compiler + "</td>";
                                html += "<td>" + item.edition + "</td>";
                                html += "<td>" + item.press + "</td>";
                                html += "<td>" + item.preTime.substring(0,10) + "</td>";
                                html += " <td class='text-right'><a data-content-id='" + item.syllabusBookId
                                    + "' class='btn btn-danger btn-xs btnDel' onclick=\"delSyllabusBook('" + item.syllabusBookId + "','" + item.syllabusId + "')\">删除</a></td>";//
                                html += "</tr>";
                            });
                            $("#tabsb2 tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })
            //建议选用教材End

            //课程学时分配Start
            $("#CreateSyllabusPeriod").submit(function () { $(this).ajaxSubmit(options); return false; });

            $('#btnSyllabusPeriod').click(function () {
                var id = $(this).attr('data-content-id');
                DivLayer(1, '课程学时分配', $('.DivSyllabusPeriod'), '800px', '450px')
            })

            //设置“课程学时分配”中，每次点击tab中的“列表”，查询数据
            $('#ViewSyllabusPeriodList').click(function () {
                var id = $(this).attr('data-content-id');
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetSyllabusPeriod",
                    data: {
                        id: id
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) {
                                html += "<tr>";
                                html += "<td>" + item.Course + "</td>";
                                html += " <td class='text-right'><a  "
                                    + "' class='btn btn-danger btn-xs btnDel' onclick=\"delSyllabusPeriod('" + item.CourseId + "','" + item.syllabusId + "')\">删除</a></td>";//
                                html += "</tr>";
                            })
                            $("#tabkc2 tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })
            //课程学时分配End

            //先修课程Start
          //  $("#CreateSyllabusFirstCourse").submit(function () { $(this).ajaxSubmit(options); return false; });

            //弹出div
            $('#btnSyllabusFirstCourse').click(function () {
                var id = $(this).attr('data-content-id');
                DivLayer(1, '先修课程', $('.DivSyllabusFirstCourse'), '800px', '450px') 
            })

            //根据搜索内容加载列表
            $('#btnSearchCourses').click(function () {
                var name = $("#searchKey").val(); 
                var SyllabusId = $("#DivSyllabusFirstCourse_SyllabusId").val();
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetCourses",
                    data: {
                        name: name
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) { 
                            var html = "";
                            $.each(result, function (i, item) {
                                html += "<tr>";
                                html += "<td>" + item.name + "</td>";
                                html += " <td class='text-right'><a class='btn btn-danger btn-xs btnDel' onclick=\"addSyllabusFirstCourse('" + item.courseId + "','" + SyllabusId + "')\">添加</a></td>";// 
                                html += "</tr>";
                            }) 
                            $("#tabxx1 tbody tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })

          
            //设置“先修课程”中，每次点击tab中的“列表”，查询数据
            $('#ViewSyllabusFirstCourseList').click(function () {
                var id = $(this).attr('data-content-id');
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetSyllabusFirstCourse",
                    data: {
                        id: id
                    },
                    dataType: "json",
                    success: function (result) { 
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) { 
                                html += "<tr>";
                                html += "<td>" + item.name + "</td>"; 
                                html += " <td class='text-right'><a  "
                                    + "' class='btn btn-danger btn-xs btnDel' onclick=\"delSyllabusFirstCourse('" + item.courseId + "','" + id+ "')\">删除</a></td>";//
                                html += "</tr>";
                            }) 
                            $("#tabxx2 tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })
            //先修课程End



            //对应专业Start 

            //弹出div
            $('#btnSyllabusProfessional').click(function () {
                var id = $(this).attr('data-content-id');
                DivLayer(1, '先修专业', $('.DivSyllabusProfessional'), '800px', '450px')
            })

            //根据搜索内容加载列表
            $('#btnSearchProfessionals').click(function () {
                var name = $("#ProfessionalsearchKey").val();
                var SyllabusId = $("#DivSyllabusProfessional_SyllabusId").val();
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetProfessionals",
                    data: {
                        name: name
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) { 
                                html += "<tr>";
                                html += "<td>" + item.name + "</td>";
                                html += " <td class='text-right'><a class='btn btn-danger btn-xs btnDel' onclick=\"addSyllabusProfessional('" + item.professionalId + "','" + SyllabusId + "')\">添加</a></td>";// 
                                html += "</tr>";
                            })
                            $("#tabzy1 tbody tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })


            //设置“先修专业”中，每次点击tab中的“列表”，查询数据
            $('#ViewSyllabusProfessionalList').click(function () {
                var id = $(this).attr('data-content-id');
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetSyllabusProfessional",
                    data: {
                        id: id
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) {
                                html += "<tr>";
                                html += "<td>" + item.name + "</td>";
                                html += " <td class='text-right'><a  "
                                    + "' class='btn btn-danger btn-xs btnDel' onclick=\"delSyllabusProfessional('" + item.professionalId + "','" + id + "')\">删除</a></td>";//
                                html += "</tr>";
                            })
                            $("#tabzy2 tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })
            //对应专业End


            //任课老师Start 

            //弹出div
            $('#btnSyllabusTeacher').click(function () {
                var id = $(this).attr('data-content-id');
                DivLayer(1, '任课老师', $('.DivSyllabusTeacher'), '800px', '450px')
            })

            //根据搜索内容加载列表
            $('#btnSearchTeachers').click(function () {
                var name = $("#TeachersearchKey").val();
                var SyllabusId = $("#DivSyllabusTeacher_SyllabusId").val();
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetTeachers",
                    data: {
                        name: name
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) {
                                html += "<tr>";
                                html += "<td>" + item.name + "</td>";
                                html += " <td class='text-right'><a class='btn btn-danger btn-xs btnDel' onclick=\"addSyllabusTeacher('" + item.teacherId + "','" + SyllabusId + "')\">添加</a></td>";// 
                                html += "</tr>";
                            })
                            $("#tabls1 tbody tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })


            //设置“任课老师”中，每次点击tab中的“列表”，查询数据
            $('#ViewSyllabusTeacherList').click(function () {
                var id = $(this).attr('data-content-id');
                $.ajax({
                    type: "Post",
                    url: "/Syllabus/GetSyllabusTeacher",
                    data: {
                        id: id
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result != undefined) {
                            var html = "";
                            $.each(result, function (i, item) {
                                html += "<tr>";
                                html += "<td>" + item.name + "</td>";
                                html += " <td class='text-right'><a  "
                                    + "' class='btn btn-danger btn-xs btnDel' onclick=\"delSyllabusTeacher('" + item.teacherId + "','" + id + "')\">删除</a></td>";//
                                html += "</tr>";
                            })
                            $("#tabls2 tbody").html(html);
                        }
                        else {
                            alert("失败");
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("error");
                    }
                });
            })
            //任课老师End


        })

    </script>
    <script src="~/lib/ckeditor/classic/ckeditor.js"></script>
    <script type="text/javascript">

        $(function () {


            ClassicEditor
                .create(document.querySelector('#tab1-editor'), {
                    ckfinder: {
                        uploadUrl: '/BaseData/Ckeditor'
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            ClassicEditor
                .create(document.querySelector('#tab2-editor'), {
                    ckfinder: {
                        uploadUrl: '/BaseData/Ckeditor'
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            ClassicEditor
                .create(document.querySelector('#tab4-editor'), {
                    ckfinder: {
                        uploadUrl: '/BaseData/Ckeditor'
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            ClassicEditor
                .create(document.querySelector('#tab5-editor'), {
                    ckfinder: {
                        uploadUrl: '/BaseData/Ckeditor'
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            ClassicEditor
                .create(document.querySelector('#tab6-editor'), {
                    ckfinder: {
                        uploadUrl: '/BaseData/Ckeditor'
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            ClassicEditor
                .create(document.querySelector('#tab7-editor'), {
                    ckfinder: {
                        uploadUrl: '/BaseData/Ckeditor'
                    }
                })
                .catch(error => {
                    console.log(error);
                });

            var iii = '@ViewBag.msg';
            if (iii != '') {
                layer.msg(iii);
            }
        })


    </script>
}
