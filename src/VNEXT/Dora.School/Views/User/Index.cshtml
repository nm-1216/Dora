@model Dora.Core.PageList<SchoolUser>
@{
    ViewData["Title"] = "管理员";
    Layout = "_Layout";
}

<div class="ResetPasswordDiv" style="display:none">
    <form id="ResetPassword" asp-action="ResetPassword" method="post">
        <input type="hidden" id="ResetPasswordId" name="Id" />

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>新密码：</th>
                    <th>确认密码：</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input id="ResetPasswordPwd" type="password" name="pwd" class="form-control" /></td>
                    <td><input id="ResetPasswordOkPwd" type="password" name="okPwd" class="form-control" /></td>
                </tr>
                <tr>
                    <td colspan="2" class="text-center">
                        <button class="btn btn-danger" style="width:120px" type="submit">提交</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </form>
</div>

<div class="container-fluid">
    <form id="mainForm" class="form-inline" method="post">
        <div class="row" style="padding-top:10px;">
            <div class="col-sm-11">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">搜索条件</div>
                        <input type="text" class="form-control" name="searchKey" value="@ViewData["searchKey"]" id="searchKey" placeholder="代码或名称">
                    </div>
                </div>

                <button type="submit" class="btn btn-info">search</button>
            </div>
            <div class="col-sm-1">
                <a class="btn  btn-danger btnAdd">添加</a>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <table class="table-striped table">
                    <thead>
                        <tr>
                            <th>账号</th>
                            <th>类型</th>
                            <th>姓名</th>
                            <th>角色</th>

                            <th class="text-right">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td>@item.UserName</td>
                            <td>@item.UserType</td>
                            <td>@(item.Student!=null?item.Student.Name:item.Teacher!=null?item.Teacher.Name:item.UserName)</td>
                            <td>@( string.Join(", ", (ViewBag.roles as IQueryable<SchoolRole>).Where(b=>item.Roles.Select(c=>c.RoleId).Contains(b.Id)).Select(b=>b.Name)) )</td>

                            <td class="text-right">
                                <a data-content-id="@item.Id" class="btn btn-info btn-xs btnSetRole">设置角色</a>
                                <a data-content-id="@item.Id" class="btn btn-primary btn-xs btnResetPassword">修改密码</a>
                                <a data-content-id="@item.Id" class="btn btn-danger btn-xs btnDel">删除</a>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <input type="hidden" name="Page" id="Page" value="@ViewBag.Page" />
        @Html.Raw(Dora.Core.Pager.Pager1(Context.Request.Path.Value, Model.CurrPage, Model.PageSize, Model.PageCount, Model.RecordCount))


    </form>
</div>

@section scripts{
    <script type="text/javascript">

        $(function () {
            var options = {
                //target: '#output',          //把服务器返回的内容放入id为output的元素中
                //beforeSubmit: showRequest,  //提交前的回调函数
                success: showResponse,      //提交后的回调函数
                //url: url,                 //默认是form的action， 如果申明，则会覆盖
                type: 'post',               //默认是form的method（get or post），如果申明，则会覆盖
                dataType: 'json',           //html(默认), xml, script, json...接受服务端返回的类型
                //clearForm: true,          //成功提交后，清除所有表单元素的值
                //resetForm: true,          //成功提交后，重置所有表单元素的值
                timeout: 3000               //限制请求的时间，当请求大于3秒后，跳出请求
            }
            function showResponse(responseText, statusText) {
                console.log("responseText", responseText);
                console.log("statusText", statusText);
                var data = responseText;
                if (data.result == 1) {
                    layer.closeAll();
                    layer.msg(data.msg, {
                        time: 2000, end: function () {
                            location.href = location.href;
                        }
                    }
                    )
                } else {
                    layer.msg(data.msg);
                }
            };

            //$("#AddModuleType").submit(function () { $(this).ajaxSubmit(options); return false; });
            $("#CreateRole").submit(function () { $(this).ajaxSubmit(options); return false; });
            $("#ResetPassword").submit(function () { $(this).ajaxSubmit(options); return false; });
            $('.btnDel').on('click', function () {
                console.log('btnDel')
                var id = $(this).attr('data-content-id');

                layer.confirm('数据不可恢复，确认要删除吗？', {
                    btn: ['确定', '取消']
                }, function () {
                    $.ajax({
                        url: '/User/Delete',
                        type: 'POST',
                        async: true,
                        data: {
                            id: id
                        },
                        timeout: 5000,
                        dataType: 'json',
                        beforeSend: function (xhr) {
                            console.log(xhr)
                            console.log('发送前')
                        },
                        success: function (data, textStatus, jqXHR) {
                            console.log(data)
                            console.log(textStatus)
                            console.log(jqXHR)
                            if (data.result == 1) {
                                layer.closeAll();
                                layer.msg(data.msg, {
                                    time: 2000, end: function () {
                                        location.href = location.href;
                                    }
                                }
                                )
                            } else {
                                layer.msg(data.msg);
                            }
                        },
                        error: function (xhr, textStatus) {
                            console.log('错误')
                            console.log(xhr)
                            console.log(textStatus)
                        },
                        complete: function () {
                            console.log('结束')
                        }
                    })
                }, function () {
                    return
                });
            })
            $('.btnResetPassword').on('click', function () {
                $('#ResetPasswordId').val($(this).attr('data-content-id'));
                $('#ResetPasswordPwd').val('');
                $('#ResetPasswordOkPwd').val('');

                DivLayer(1, '重置密码', $('.ResetPasswordDiv'))
            })
            $('.btnAdd').on('click', function () {
                IFreamLayer(1, '添加新用户', '/Register', '580px', '460px')
            })
            $('.btnSetRole').on('click', function () {
                var id = $(this).attr('data-content-id')

                IFreamLayer(1, '设置角色', '/User/SetRole?id=' + id, '580px', '460px')
            })
        })

    </script>
}
