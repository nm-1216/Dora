@model ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
}
<div class="container-fluid">

    <h2>@ViewData["Title"].</h2>


    <form method="post" asp-action="ChangePassword" class="form-horizontal">
        <h4>Change a new Password.</h4>
        <hr />
        <div class="form-group">
            <label asp-for="OldPassword" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="OldPassword" class="form-control" />
                <span asp-validation-for="OldPassword" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="NewPassword" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="NewPassword" class="form-control" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="ConfirmPassword" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
        </div>

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-danger">Change password</button>
            </div>
        </div>
    </form>

</div>
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }


